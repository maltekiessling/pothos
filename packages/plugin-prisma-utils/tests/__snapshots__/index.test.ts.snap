// Vitest Snapshot v1

exports[`prisma utils > generates schema 1`] = `
"input CommentFilter {
  createdAt: DateTime
}

input CommentListFilter {
  some: CommentFilter
}

scalar DateTime

input IntFilter {
  equals: Int
  not: IntFilter
}

type Mutation {
  createUser(data: UserCreate!): User!
}

enum OrderBy {
  Asc
  Desc
}

type Post {
  id: ID!
}

input PostCreate {
  title: String!
}

input PostFilter {
  author: UserFilter

  \\"\\"\\"filter by author id\\"\\"\\"
  authorId: IntFilter
  comments: CommentListFilter
  createdAt: DateTime
  id: IntFilter
  title: String
}

input PostOrderBy {
  author: UserOrderBy
  createdAt: OrderBy
  id: OrderBy
  title: OrderBy
}

input PostWhereUnique {
  id: Int
}

input ProfileOrderBy {
  bio: OrderBy
  user: UserOrderBy
}

type Query {
  post(list: StringListFilter, title: StringFilter): Post
  posts(filter: PostFilter, order: PostOrderBy): [Post!]!
}

input StringFilter {
  contains: String
  equals: String
  not: StringFilter
  startsWith: String
}

input StringListFilter {
  every: StringFilter
  none: StringFilter
  some: StringFilter
}

type User {
  email: String!
  id: ID!
  posts: [Post!]!
}

input UserCreate {
  email: String!
  name: String
  posts: UserCreatePostsRelation
}

input UserCreatePostsRelation {
  connect: [PostWhereUnique!]
  create: [PostCreate!]
}

input UserFilter {
  NOT: UserFilter
  id: IntFilter
}

input UserOrderBy {
  name: OrderBy
  profile: ProfileOrderBy
}"
`;
